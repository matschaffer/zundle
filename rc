# Include a bundle in your environment
Bundle() {
  local name="$1"
  zundle_bundles+=("$name")
}

# Install or update all bundles
BundleInstall() {
  for bundle in $zundle_bundles; do
    local bundle_path="`zundle_path \"$bundle\"`"
    if [[ -d "$bundle_path" ]]; then
      echo "Updating $bundle..."
      zundle_update "$bundle_path"
    else
      local uri="`zundle_uri \"$bundle\"`"
      echo "Installing $uri..."
      zundle_install "$uri"
    fi
  done
  zundle_load_bundles
}

LoadBundles() {
  zundle_load_bundles
}

#### Internals

zundle_rc="${0}"
zundle_home="${zundle_rc:h}"

zundle_bundles=()

zundle_load() {
  local name="$1"
  local bundle_path="`zundle_path \"$name\"`"
  local rc_path="$bundle_path/rc"
  [[ -f "$rc_path" ]] && source "$rc_path"
}

zundle_path() {
  local name="$1"
  echo "${zundle_home:h}/${name:t:r}"
}

zundle_install() {
  local uri="$1"
  (cd "$HOME/.zsh/bundle" && git clone "$uri")
}

zundle_update() {
  local bundle_path="$1"
  (cd "$bundle_path" && git pull)
}

zundle_uri() {
  local name="$1"
  if echo "$name" | grep '^[a-zA-Z0-9][a-zA-Z0-9-]*/[^/]\+$' >/dev/null; then
    echo "https://github.com/$1.git"
  else
    echo "$name"
  fi
}

zundle_load_bundles() {
  # Load bundles into fpath before running compinit
  for bundle ($zundle_bundles); do
    fpath=("`zundle_path \"$bundle\"`" $fpath)
  done

  autoload -U compinit
  compinit -i

  # Then source the bundles
  for bundle ($zundle_bundles); do
    zundle_load "$bundle"
  done
}
